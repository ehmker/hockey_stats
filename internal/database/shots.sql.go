// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: shots.sql

package database

import (
	"context"
	"time"

	"github.com/google/uuid"
)

const createShot = `-- name: CreateShot :one
INSERT INTO shots (
    id, 
    game_id, 
    created_at,
    updated_at,
    team, 
    player, 
    x_loc,
    y_loc,
    goal
)
VALUES
($1, $2, $3, $4, $5, $6, $7, $8, $9)
RETURNING id, game_id, created_at, updated_at, team, player, x_loc, y_loc, goal
`

type CreateShotParams struct {
	ID        uuid.UUID
	GameID    string
	CreatedAt time.Time
	UpdatedAt time.Time
	Team      string
	Player    string
	XLoc      int32
	YLoc      int32
	Goal      bool
}

func (q *Queries) CreateShot(ctx context.Context, arg CreateShotParams) (Shot, error) {
	row := q.db.QueryRowContext(ctx, createShot,
		arg.ID,
		arg.GameID,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Team,
		arg.Player,
		arg.XLoc,
		arg.YLoc,
		arg.Goal,
	)
	var i Shot
	err := row.Scan(
		&i.ID,
		&i.GameID,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Team,
		&i.Player,
		&i.XLoc,
		&i.YLoc,
		&i.Goal,
	)
	return i, err
}
