// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: scoring_summary.sql

package database

import (
	"context"
	"database/sql"
	"time"

	"github.com/google/uuid"
)

const createScoringSummary = `-- name: CreateScoringSummary :one
INSERT INTO
    scoring_summaries (
        id,
        gameid,
        created_at,
        updated_at,
        period,
        time, 
        team,
        scoring_player,
        scoring_player_id,
        first_assist,
        first_assist_id,
        second_assist, 
        second_assist_id,
        empty_net
    )
VALUES
    ($1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11, $12, $13, $14)
RETURNING id, gameid, created_at, updated_at, period, time, team, scoring_player, scoring_player_id, first_assist, first_assist_id, second_assist, second_assist_id, empty_net
`

type CreateScoringSummaryParams struct {
	ID              uuid.UUID
	Gameid          string
	CreatedAt       time.Time
	UpdatedAt       time.Time
	Period          string
	Time            time.Time
	Team            string
	ScoringPlayer   string
	ScoringPlayerID string
	FirstAssist     sql.NullString
	FirstAssistID   sql.NullString
	SecondAssist    sql.NullString
	SecondAssistID  sql.NullString
	EmptyNet        bool
}

func (q *Queries) CreateScoringSummary(ctx context.Context, arg CreateScoringSummaryParams) (ScoringSummary, error) {
	row := q.db.QueryRowContext(ctx, createScoringSummary,
		arg.ID,
		arg.Gameid,
		arg.CreatedAt,
		arg.UpdatedAt,
		arg.Period,
		arg.Time,
		arg.Team,
		arg.ScoringPlayer,
		arg.ScoringPlayerID,
		arg.FirstAssist,
		arg.FirstAssistID,
		arg.SecondAssist,
		arg.SecondAssistID,
		arg.EmptyNet,
	)
	var i ScoringSummary
	err := row.Scan(
		&i.ID,
		&i.Gameid,
		&i.CreatedAt,
		&i.UpdatedAt,
		&i.Period,
		&i.Time,
		&i.Team,
		&i.ScoringPlayer,
		&i.ScoringPlayerID,
		&i.FirstAssist,
		&i.FirstAssistID,
		&i.SecondAssist,
		&i.SecondAssistID,
		&i.EmptyNet,
	)
	return i, err
}
